[tool.poetry]
name = "stdatm"
version = "0.0.0"
description = "Numpy-oriented Standard Atmosphere model"
readme = "README.md"
authors = [
    "Christophe DAVID <christophe.david@onera.fr>",
]
license = "GPL-3.0-only"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Physics"
]

packages = [
    { include = "stdatm", from = "src" },
]
exclude = ["**/tests/**"]

[tool.poetry.dependencies]
python = "^3.8"
numpy = "^1.22.0"
scipy = "^1.9.3"

[tool.poetry.group.test.dependencies]
pytest = "^7.0"
pytest-cov = "^3.0"
coverage = { version = "^6.0", extras = ["toml"] }

[tool.poetry.group.benchmark.dependencies]
pytest-profiling = "^1.7.0"
snakeviz = "^2.1.1"
pytest-benchmark = { version = "^4", extras = ["histogram"] }

[tool.poetry.group.doc.dependencies]
sphinx = "^4.1.2"
sphinx-rtd-theme = "^1.0"
sphinxcontrib-bibtex = "^2.3.0"

[tool.poetry.group.lint.dependencies]
pre-commit = "^2.14.1"
black = { version = "23.3.0" }
flake8 = "^4.0.1"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.black]
line-length = 100

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov-report term-missing --cov-report html --verbose --benchmark-disable --benchmark-autosave  --benchmark-calibration-precision=100 --benchmark-max-time=2.0"
testpaths = ["src"]
norecursedirs = ["dist", "build", ".tox"]

[tool.coverage.run]
branch = true
source = ["stdatm"]
omit = ["*/test/*", "*/tests/*"]
[tool.coverage.paths]
source = ["src/", "*/site-packages/"]
[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ = = .__main__.:"
]
