name: Tests

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10" ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry==${{ vars.POETRY_VERSION }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Activate environment and install dependencies
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install

      - name: Check with Black
        run: |
          # Fails if Black format is not respected
          poetry run black --check .
        shell: bash

      - name: Unit tests
        run: |
          poetry run pytest src
          poetry run coverage xml  # for sending coverage report
        shell: bash

      - name: Publish code coverage on Code Climate
        uses: paambaati/codeclimate-action@v3.2.0
        if: ${{ runner.os == 'Linux' && matrix.python-version == '3.9' }} # This action runs only on Linux
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.codeclimate }}
