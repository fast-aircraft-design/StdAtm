name: Tests

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'


jobs:
  tests:
    runs-on: ${{ matrix.os }}
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
        shell: bash

      - name: Poetry path
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
        shell: bash

      - name: Sets unique cache directory for Poetry
        run: poetry config cache-dir ~/poetry_cache
        shell: bash

      - uses: actions/cache@v2
        with:
          path: ~/poetry_cache
          key: ${{ runner.os }}-Py${{ matrix.python-version }}-pypoetry-${{ hashFiles('**/poetry.lock') }}

      - name: Activate environment and install dependencies
        run: poetry install
        shell: bash

      - name: Check with Black
        run: |
          # Fails if Black format is not respected
          poetry run black --check .
        shell: bash

      - name: Unit tests
        run: |
          poetry run pytest src
          poetry run coverage xml  # for sending coverage report
        shell: bash

      - name: Publish code coverage on Code Climate
        uses: paambaati/codeclimate-action@v3.0.0
        if: ${{ runner.os == 'Linux' && matrix.python-version == '3.8' }} # This action runs only on Linux
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.codeclimate }}
